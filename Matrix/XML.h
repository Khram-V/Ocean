//
//      XML.cpp                            Ver 0.2  2008.08.26 - 2008.11.03
//
//      Простейший пакет процедур для чтения/записи файлов в формате
//          расширенного языка разметки данных
//
//      В пакете программ испоьзуются только стандартные функции С,С++
//
//      <?xml encoding="Windows-1251" lang="ru" ?>
//
#include <StdIO.h>
                //
class inXML     // Простой последовательный перебор при считывании данных
{               //
  FILE *File;   // Файл, связанный с потоком данных
  char *Title,  // Слово-заголовок для всего .xml файла
       *str;    // - просто рабочая строчка, !! длина , была - в стат.памяти
  int   lst;    // - длина етой просто рабочей строчки
  bool  inFind; // ключ (не)завершенной выборки слов
  char* Ctrs( int pos );    // столь же пустой контроль для рабочей строчки ...
  bool Pass( const char* ); // простой поиск в файле по строке - образцу
public:                     //
  inXML(): File( NULL ),Title( NULL ),str( NULL ),lst( 0 ),inFind( false ){}
 ~inXML(){ Close(); }
//
//      Блок последоваьельного считываения данных
//
  char *Open( const char *FileName ); // на выходе ключ Key из памяти программы Open
  char *Next();                       // принудительный переход к следующему блоку
  char *Last(){ return str; }         // последнее из прочитанных слов/строк
  char *Word();                       // функция поиска/выборки одного слова
  char *String();                     // функция выборки строки до первого разделителя
//char *Get();                       // --один элемент до следующего разделителя, или NULL
//char *Read();                      // --считывается весь блок, который закрывается
//bool Read( const char *Fmt, ... ); // --считывается весь блок - по формату
  void Close();                      // полная расчитка данных и закрытие файла
};

class outXML
{               //
  int Level,mL; // Текущий уровень вложенности потока данных, резерв памяти
  FILE *File;   // Файл, связанный с потоком данных
  char **Ident; // Последовательность активных идентификаторов
public:         //
  outXML(): Level( 0 ),mL( 0 ), File( NULL ), Ident( NULL ){}
 ~outXML(){ Close(); }
//
//      Блок записи данных
//
  bool Create( const char *FileName="DataFile.xml",
               const char *Key="Khram", // Ключ для опознавания файла при открытии
               const char *CodeXML="encoding=\"Windows-1251\" lang=\"ru\"" );
  int New( const char* Id,              // создание и отметка в файле нового уровня
           const char* Fmt=NULL, ... ); //      с дополнительной строкой параметров
  int One( const char* Id,         // создание нового уровня
           const char* Fmt, ... ); //      с данными только в строке параметров
  int Put( const char *Fmt, ... ); // запись данных по формату
  int Com( const char *Fmt, ... ); // запись комментария по формату
  int Back();                      // выход и закрытие текущего уровня
  int Back( const char* Id );      // закрытие всех уровней до Id включительно
  void Close();
};

